snippet dotdotdot "Implies [a] ... b"
	\AxiomC{\$[$1]\$}
	\noLine
	\UnaryInfC{\$\vdots\$}
	\noLine
	\UnaryInfC{\$$2\$}
endsnippet

snippet fr "Fraction"
\frac{ $1}{ $2} $0
endsnippet

snippet ex "Example"
\begin{ex}
	$1
\end{ex}
endsnippet

snippet eq "equation"
\begin{equation}
	$1
\end{equation}
endsnippet

snippet vec "Vector"
\begin{pmatrix}
	$1
\end{pmatrix}
endsnippet

snippet matrix "Matrix"
\begin{bmatrix}
	$1
\end{bmatrix}
endsnippet

snippet fig "Figure - pdftex"
this is $1
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
.\] $0
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

